colorscheme Mustang
"colorscheme Tomorrow-Night
set tabstop=4 expandtab shiftwidth=4
"set foldmethod=marker
set rnu
set mouse=a

set tb=

let g:pdv_template_dir = $HOME ."/.janus/pdv/templates_snip"

let g:symfony_app_console_caller= "php"
let g:symfony_app_console_path= "app/console"

let g:phpunit_args = "app/"

"<MAPPINGS>
"fuzzy tag search
nnoremap <leader>Ä‡ :CtrlPTag<cr>

"documents in php
nnoremap <leader>d :call pdv#DocumentWithSnip()<CR>

"aligns a php array by =>
nnoremap <leader>a Vi(:Tabularize /=><CR>

"aligns selected by =
vnoremap <leader>= :Tabularize /=<CR>

"something which works but I'm not sure how
vnoremap <leader>a :Tabularize /\$[a-zA-Z_]*/<CR>

"sorts a block of stuff
nnoremap <leader>sb )kV(:sort<CR>

"surrounds text in a line with var_dump();die;
nnoremap <leader>vdd Ivar_dump(<ESC>A);die;<ESC>F)
vnoremap <leader>vdd davar_dump()<ESC>PA;die;<ESC>F)

"puts text into a try catch
vnoremap <leader>tc dOtry {}P=i{k_f{%a catch (\Exception $exception) {}
"surrounds text in a line with console.log();
nnoremap <leader><leader>cl Iconsole.log(<ESC>A);<ESC>F)

"<space>
nnoremap <Up>        <C-W>k
nnoremap <Down>      <C-W>j
nnoremap <Left>      <C-W>h
nnoremap <Right>     <C-W>l

nnoremap <S-Up>      <C-W>K
nnoremap <S-Down>    <C-W>J
nnoremap <S-Left>    <C-W>H
nnoremap <S-Right>   <C-W>L

"</space>
"
"</MAPPINGS>

let g:php_cs_fixer_path = "~/bin/php-cs-fixer.phar"
let g:php_cs_fixer_level = "all"                  " which level ?
let g:php_cs_fixer_config = "default"             " configuration
let g:php_cs_fixer_php_path = "php"               " Path to PHP
" If you want to define specific fixers:
"let g:php_cs_fixer_fixers_list = "linefeed,short_tag,indentation"
let g:php_cs_fixer_enable_default_mapping = 1     " Enable the mapping by default (<leader>pcd)
let g:phpqa_codesniffer_autorun = 0               " Disable autorun
let g:phpqa_messdetector_autorun = 0               " Disable autorun
let g:phpqa_codecoverage_autorun = 0               " Enable autorun
let g:phpcomplete_index_composer_command = "composer"


"set wildignore+=.*coverage
"let g:ctrlp_custom_ignore = {
            "\ 'dir':  '\v[\/]\.(git|hg|svn|coverage)$',
            "\ 'file': '\v\.(exe|so|dll)$',
            "\ }
"GRAPHIC OPTIONS
set go-=m
set go-=T

" FILETYPE SPECIFIC
autocmd FileType php autocmd BufWritePre <buffer> :%s/\s\+$//e
